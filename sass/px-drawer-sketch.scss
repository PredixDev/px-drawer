/*
 * Copyright (c) 2016 GE Global Research. All rights reserved.
 *
 * The copyright to the computer software herein is the property of
 * GE Global Research. The software may be used and/or copied only
 * with the written permission of GE Global Research or in accordance
 * with the terms and conditions stipulated in the agreement/contract
 * under which the software has been supplied.
 */

// Generic
//@import "px-normalize-design/_generic.normalize.scss";
//@import "px-box-sizing-design/_generic.box-sizing.scss";
//@import "px-helpers-design/_generic.helpers.scss";

// Base
//@import "px-flexbox-design/_base.flexbox.scss";
//@import "px-viewport-design/_base.viewport.scss";
// Component

// Trumps
//@import "px-spacing-responsive-design/_trumps.spacing-responsive.scss";
//@import "px-widths-responsive-design/_trumps.widths-responsive.scss";
$inuit-enable-margins: true;
@import 'px-spacing-design/_trumps.spacing.scss';
@import "variables";
@import "px-mobile-design/sass/_mixins.scss";

:host {
  display: block;
}

:host .drawer {
  z-index: 20;
  background-color: var(--px-drawer-background-color, #242326);
  width: var(--px-drawer-width, 256px);
  height: var(--px-drawer-height, 100%);
  @apply(--px-drawer);
}
:host .drawer--static {
  height: 100vh;
}
:host([mini]) .drawer__content ::content {
  --px-table-view-title: {
    display: none;
  }
}

:host([mini]) .drawer,
:host([mini][persistent]) .drawer {
  width: var(--px-drawer-mini-width, 50px);
}
:host([mini][opened]) .drawer {
  width: var(--px-drawer-mini-width-opened, auto);
}

:host ::content .drawer__spacer {
  min-height: 56px;
}

:host .drawer__content {
  overflow-x: hidden;
  @apply(--px-drawer-content);
}

:host([swipe-open]) > .drawer::after {
  position: fixed;
  visibility: visible;
  content: '';
}

:host([swipe-open]) > .drawer.drawer--left::after {
  top: var(--px-drawer-target-offset, 0px);
  bottom: 0;
  left: 100%;
  width: var(--px-drawer-target-size, 50px);
}

:host([swipe-open]) > .drawer.drawer--right::after {
  top: var(--px-drawer-target-offset, 0px);
  bottom: 0;
  left: calc(var(--px-drawer-target-size, 50px) * -1);
  width: var(--px-drawer-target-size, 50px);
}

:host([swipe-open]) > .drawer.drawer--top::after {
  top: 100%;
  left: var(--px-drawer-target-offset, 0px);
  height: var(--px-drawer-target-size, 50px);
  width: 100%;
}

:host([swipe-open]) > .drawer.drawer--bottom::after {
  top: calc(var(--px-drawer-target-size, 50px) * -1);
  left: var(--px-drawer-target-offset, 0px);
  height: var(--px-drawer-target-size, 50px);
  width: 100%;
}


// For debugging purposes only (only active when `debug` attribute is set)
:host([swipe-open][debug]) > .drawer::after {
  background-color: rgba(255,182,193,0.5);
}

:host .drawer__overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transition: opacity 0.2s ease;
  -webkit-transition: opacity 0.2s ease;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  opacity: 0;
  z-index: -1;
  visibility: hidden;
  display: none;
  background: var(--px-drawer-overlay-background, rgba(0, 0, 0, 0.5));
  @apply(--px-drawer-overlay);
}

:host([opened][persistent]){
  min-height: 100vh;
}

:host([opened]) .drawer {
  visibility: visible;
  transform: translate3d(0,0,0);
  -webkit-transform: translate3d(0,0,0);
  @apply(--px-drawer-opened);
}

:host([opened][overlay]) > .drawer__overlay,
:host([opened=true][overlay=true]) > .drawer__overlay {
  opacity: 1;
  z-index: 15;
  visibility: visible;
  display: block;
}

:host([opened][persistent]) > .drawer__overlay {
  visibility: hidden;
  display: none;
  pointer-events: none;
  opacity: 0;
}

.drawer {
  //z-index   : 210;
  @include transform(translate3d(0, 0, 0));
  display   : block;
  position  : absolute;
  font-size: $inuit-base-font-size;
  text-align: left;

  transition: $drawer-transition;
  //will-change: translate;
  visibility: hidden;

  @include modifier ('persistent') {
    &.is-open{

    }
  }
  @include modifier ('fixed') {
    position: fixed !important;
  }

  * {
    user-select: none;
  }

  &.is-open {
    visibility: visible;
    transform: translate3d(0, 0, 0) !important;

    .drawer__mask {
      opacity   : 1;
      visibility: visible;
    }

    .drawer__content {
      //z-index: 350;
    }
  }

  ///------------------------------------------------------
  /// .drawer--temporary
  @include modifier ('shadow') {
    box-shadow: $drawer-box-shadow;
  }


  ///------------------------------------------------------
  /// .drawer__content
  @include element ('content') {
    padding    : 0;
    width      : 100%;
    height     : 100%;
    display    : block;
    overflow   : auto;
    position   : relative;
    user-select: none;
  }

  .drawer--left,
  .drawer--right {
    @include media-breakpoint-up ('lg') {
      max-width: $drawer-max-width;
    }
  }

}
@import "_drawer--top";
@import "_drawer--bottom";
@import "_drawer--left";
@import "_drawer--right";
@import "_drawer--mini";
@import "_drawer--persistent";
